
#### QUESTION 1) What are the most divergent traits within wild sunflowers? 
### QUESTION 2) What are the most divergent traits within specific phylogenetic clades of wild sunflowers? (Clades include Perennial, Annual and South eastern Perennial) 
ARE THESE THE SAME TRAITS OR DO NEW TRAITS APPEAR AT A CLADE LEVEL??
#### QUESTION 3) How accurately can we Predict Species at a Genus and clade-level by using only the most divergent traits?  


## Genus code ### 
##### 

train <- read.csv(file.choose(),header = T)

test <- read.csv(file.choose(),header = T)



#### converting the species column to factor ### 

train$Species <- as.factor(train$Species)

test$Species <- as.factor(test$Species)

###### 

### WE USED THREE SEPARATE MACHINE LEARNING WORKFLOWS IN THIS ANALYSIS (INDICATED AS WORKFLOW 1, WORKFLOW 2 AND WORKFLOW 3)

### EACH WORKFLOW CONTAINS THE FOLLOWING STEPS #### 
### STEP 1)FEATURE SELECTION (TO EXTRACT THE MOST DIVERGENT TRAITS AND ANSWER QUESTION 1/QUESTION 2)  
#### STEP 2)REDUCE THE DATASET TO ONLY CONTAIN THE MOST DIVERGENT TRAITS 
### STEP 3) USE MACHINE LEARNING CLASSIFIERS ON THIS REDUCED DATASET TO CLASSIFY SPECIES AND ANSWER QUESTION 3 

### WE COMPARE THE RESULTS OF EACH WORKFLOW IN ORDER TO SEE IF THERE IS CONSENSUS IN REGARDS TO THE TRAITS IDENTIFIED IN THE FEATURE SELECTION STAGE 
### AND THE PREDICTION ACCURACY IN STEP 3)


#### AT FIRST WE WILL ATTEMPT TO IDENTIFY THE MOST DIVERGENT TRAITS AT A GENUS LEVEL #### 

######### WORKFLOW 1 (or WF 1) ### GENUS 

####### 
#### WF1 (Workflow 1) ## Feature selection by Boruta (Wrapper) ## Modelling by Decision Trees, Random Forest and Gradient Boosting Machine 

library(Boruta)

set.seed(1234)

Imp_feature <- Boruta(Species~., data = train,doTrace=2, maxRuns=500)

attStats(Imp_feature)                     ### viewing which attributes are important 


## Putting the importance decisions in a nice table ### 

Boruta_feature_analysis <- data.frame(attStats(Imp_feature)) 

### writing out this file #### 

write.csv(Boruta_feature_analysis,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Feature_selection/Boruta_genus.csv")


#### MODELLING ### ALL Features are important ## So no need to subset the data ## This only applies to WF1 however 

## Decision TREES ### 

########### 

library(rpart)
library(rpart.plot)

set.seed(1234)

tree_boruta <- rpart(Species~., data = train)


### prune the tree ### 

printcp(tree_boruta)

plotcp(tree_boruta)

rpart.plot(tree_boruta,gap=1,space= 0, tweak = 1)     



### making the tree again with the optimal cp value 
set.seed(1234)
tree_boruta_pruned <- rpart(Species~., data = train,cp=0.01)

rpart.plot(tree_boruta_pruned)

## predicting with the unprunned tree ### 

### prediction and confusion matrix ###
##### 

p_tree_boruta <- predict(tree_boruta,test,type = "class")

c_tree_boruta <- confusionMatrix(p_tree_boruta,test$Species)

#### predicted vs reference ### 

pred_vs_ref_rpart <- data.frame(c_tree_boruta$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rpart,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/pred_vs_ref.csv")

################
###############

per_class_metrics_rpart <- data.frame(c_tree_boruta$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_rpart,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/per_class_metrics_rpart.csv")

#### Macro averaged metrics ### 

Macro_averaged_metrics_tree <- data.frame(apply(per_class_metrics_rpart[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_tree) ### getting the name of the column 

names(Macro_averaged_metrics_tree)[names(Macro_averaged_metrics_tree) == "apply.per_class_metrics_rpart..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_tree,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/macro_averaged_metric_tree.csv")


## predicting with the pruned tree 

p_tree_boruta_pruned <- predict(tree_boruta_pruned,test,type = "class")

c_tree_boruta_pruned <- confusionMatrix(p_tree_boruta_pruned,test$Species)

#### predicted vs reference ### PRUNED ########

pred_vs_ref_rpart_pruned <- data.frame(c_tree_boruta_pruned$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rpart_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/pred_vs_ref_pruned.csv")

################
###############    #### PRUNED ######## 

per_class_metrics_rpart_pruned <- data.frame(c_tree_boruta_pruned$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_rpart_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/per_class_metrics_rpart_pruned.csv")

################
############################
#### Macro averaged metrics ### PRUNED ########


Macro_averaged_metrics_tree_pruned <- data.frame(apply(per_class_metrics_rpart_pruned[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_tree_pruned) ### getting the name of the column 

names(Macro_averaged_metrics_tree_pruned)[names(Macro_averaged_metrics_tree_pruned) == "apply.per_class_metrics_rpart_pruned..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_tree_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/macro_averaged_metric_tree_pruned.csv")



##### Random forests##

set.seed(1234)
Rf_boruta <- randomForest(Species~., data = train)

Rf_boruta

plot(Rf_boruta)

p_rf_boruta <- predict(Rf_boruta,test)

c_rf_boruta <- confusionMatrix(p_rf_boruta,test$Species)

#### predicted vs reference ### 

pred_vs_ref_rf_boruta <- data.frame(c_rf_boruta$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rf_boruta,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Random_forest/pred_vs_ref.csv")


###############    #### Random Forest ######## 

per_class_metrics_RF_boruta <- data.frame(c_rf_boruta$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_RF_boruta,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Random_forest/per_class_metrics_RF.csv")

#### Macro averaged metrics ### Random_forest ########

Macro_averaged_metrics_Rf <- data.frame(apply(per_class_metrics_RF_boruta[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_Rf) ### getting the name of the column 

names(Macro_averaged_metrics_Rf)[names(Macro_averaged_metrics_Rf) == "apply.per_class_metrics_RF_boruta..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_Rf,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Random_forest/macro_averaged_metrics_RF.csv")



#### GBM ### 

grid <- expand.grid(n.trees=c(600,1000),
                    interaction.depth=c(4,6),
                    shrinkage=0.1,
                    n.minobsinnode=10)


params <- trainControl(method = "cv",
                       number = 5)



set.seed(1234)

gbm_boruta <- train(Species~., data=train,
             method="gbm",trControl=params,
             verbose=T,tuneGrid=grid)


plot(gbm_boruta)

gbm_boruta

p_gbm_boruta <- predict(gbm_boruta,test)

c_gbm_boruta <- confusionMatrix(p_gbm_boruta,test$Species)


###############    #### GBM ######## 

#### predicted vs reference ### GBM

pred_vs_ref_gbm_boruta <- data.frame(c_gbm_boruta$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_gbm_boruta,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/GBM/pred_vs_ref.csv")

############## 

per_class_metrics_GBM_boruta <- data.frame(c_gbm_boruta$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_GBM_boruta,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/GBM/per_class_metrics_GBM.csv")

#### Macro averaged metrics ### Random_forest ########

Macro_averaged_metrics_GBM <- data.frame(apply(per_class_metrics_GBM_boruta[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_GBM) ### getting the name of the column 

names(Macro_averaged_metrics_GBM)[names(Macro_averaged_metrics_GBM) == "apply.per_class_metrics_GBM_boruta..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_GBM,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/GBM/macro_averaged_metrics_GBM.csv")


##### WF2 (Workflow 2) ### Feature selection by Gini Impurity ### 
set.seed(1234)
Rf <- randomForest(Species~., data = train)

varImpPlot(Rf)

importance_by_gini <- varImp(Rf)

write.csv(importance_by_gini,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Feature_selection/Importance_by_gini_Genus.csv")


##### using only the top 30 variables as deemed by varImpPlot ### 
###

train_gini <- train[,c("Species","LTD","LCirc","LA","LFM","WPFF","WPFB","LDM","WPSMF","LLife",
                       "FRN","LWC","LLT","WPTB","WPBMF","LD13C","FRFM","FPFM","FDFM","FTDM",
                       "FRDM","FTFM","LS","LDMC","P.T","LNRa","FDDM","LLC","LT","LP","Pe.Di")]


test_gini <- test[,c("Species","LTD","LCirc","LA","LFM","WPFF","WPFB","LDM","WPSMF","LLife",
                     "FRN","LWC","LLT","WPTB","WPBMF","LD13C","FRFM","FPFM","FDFM","FTDM",
                     "FRDM","FTFM","LS","LDMC","P.T","LNRa","FDDM","LLC","LT","LP","Pe.Di")]


#### MODELLING ##### 

## Decision TREES ### 

########### 

library(rpart)
library(rpart.plot)

set.seed(1234)

tree_gini <- rpart(Species~., data = train_gini)

### prune the tree ### 

printcp(tree_gini)

plotcp(tree_gini)

rpart.plot(tree_gini)

### making the tree again with the optimal cp value 
set.seed(1234)
tree_gini_pruned <- rpart(Species~., data = train_gini,cp=0.01)

rpart.plot(tree_gini_pruned)

## predicting with the unprunned tree ### 

### prediction and confusion matrix ###
##### 

p_tree_gini <- predict(tree_gini,test_gini,type = "class")

c_tree_gini <- confusionMatrix(p_tree_gini,test_gini$Species)

#### predicted vs reference ### 

pred_vs_ref_rpart <- data.frame(c_tree_gini$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rpart,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Rpart/pred_vs_ref.csv")

################
###############

per_class_metrics_rpart <- data.frame(c_tree_gini$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_rpart,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Rpart/per_class_metrics_rpart.csv")

#### Macro averaged metrics ### 

Macro_averaged_metrics_tree <- data.frame(apply(per_class_metrics_rpart[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_tree) ### getting the name of the column 

names(Macro_averaged_metrics_tree)[names(Macro_averaged_metrics_tree) == "apply.per_class_metrics_rpart..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_tree,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Rpart/macro_averaged_metric_tree.csv")


## predicting with the pruned tree 

p_tree_gini_pruned <- predict(tree_gini_pruned,test_gini,type = "class")

c_tree_gini_pruned <- confusionMatrix(p_tree_gini_pruned,test_gini$Species)

#### predicted vs reference ### PRUNED ########

pred_vs_ref_rpart_pruned <- data.frame(c_tree_gini_pruned$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rpart_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Rpart/pred_vs_ref_pruned.csv")

################
###############    #### PRUNED ######## 

per_class_metrics_rpart_pruned <- data.frame(c_tree_gini_pruned$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_rpart_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Rpart/per_class_metrics_rpart_pruned.csv")

################
############################
#### Macro averaged metrics ### PRUNED ########


Macro_averaged_metrics_tree_pruned <- data.frame(apply(per_class_metrics_rpart_pruned[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_tree_pruned) ### getting the name of the column 

names(Macro_averaged_metrics_tree_pruned)[names(Macro_averaged_metrics_tree_pruned) == "apply.per_class_metrics_rpart_pruned..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_tree_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Boruta/Modelling/Rpart/macro_averaged_metric_tree_pruned.csv")


##### Random forests##

set.seed(1234)
Rf_gini <- randomForest(Species~., data = train_gini)

Rf_gini

plot(Rf_gini)

p_rf_gini_train <- predict(Rf_gini,train_gini)

p_rf_gini <- predict(Rf_gini,test_gini)

c_rf_gini_train <- confusionMatrix(p_rf_gini_train,train_gini$Species)

c_rf_gini <- confusionMatrix(p_rf_gini,test_gini$Species)

###############    #### Random Forest ######## 
#### predicted vs reference ### 

pred_vs_ref_rf_gini <- data.frame(c_rf_gini$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rf_gini,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Random_forest/pred_vs_ref.csv")

######## 

per_class_metrics_RF_gini <- data.frame(c_rf_gini$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_RF_gini,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Random_forest/per_class_metrics_RF.csv")

#### Macro averaged metrics ### Random_forest ########

Macro_averaged_metrics_Rf <- data.frame(apply(per_class_metrics_RF_gini[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_Rf) ### getting the name of the column 

names(Macro_averaged_metrics_Rf)[names(Macro_averaged_metrics_Rf) == "apply.per_class_metrics_RF_gini..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_Rf,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Random_forest/macro_averaged_metrics_RF.csv")

#################################
####### for the train dataset ######## 
#################


###############    #### Random Forest ######## 
#### predicted vs reference ### 

pred_vs_ref_rf_gini_train <- data.frame(c_rf_gini_train$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rf_gini_train,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Random_forest/pred_vs_ref_train.csv")

######## 

per_class_metrics_RF_gini_train <- data.frame(c_rf_gini_train$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_RF_gini_train,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Random_forest/per_class_metrics_RF_train.csv")

#### Macro averaged metrics ### Random_forest ########

Macro_averaged_metrics_Rf_train <- data.frame(apply(per_class_metrics_RF_gini_train[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_Rf_train) ### getting the name of the column 

names(Macro_averaged_metrics_Rf_train)[names(Macro_averaged_metrics_Rf_train) == "apply.per_class_metrics_RF_gini..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_Rf_train,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/Random_forest/macro_averaged_metrics_RF_train.csv")



#### GBM ### 

grid <- expand.grid(n.trees=c(600,1000),
                    interaction.depth=c(4,6),
                    shrinkage=0.1,
                    n.minobsinnode=10)


params <- trainControl(method = "cv",
                       number = 5)



set.seed(1234)

gbm_gini <- train(Species~., data=train_gini,
                    method="gbm",trControl=params,
                    verbose=T,tuneGrid=grid)


plot(gbm_gini)

gbm_gini

p_gbm_gini <- predict(gbm_gini,test_gini)

c_gbm_gini <- confusionMatrix(p_gbm_gini,test_gini$Species)

########################## 

###############    #### GBM ######## 

#### predicted vs reference ### GBM

pred_vs_ref_gbm_gini <- data.frame(c_gbm_gini$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_gbm_gini,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/GBM/pred_vs_ref.csv")

################

per_class_metrics_GBM_gini <- data.frame(c_gbm_gini$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_GBM_gini,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/GBM/per_class_metrics_GBM.csv")

#### Macro averaged metrics ###

Macro_averaged_metrics_GBM <- data.frame(apply(per_class_metrics_GBM_gini[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_GBM) ### getting the name of the column 

names(Macro_averaged_metrics_GBM)[names(Macro_averaged_metrics_GBM) == "apply.per_class_metrics_GBM_gini..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_GBM,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/Gini/Modelling/GBM/macro_averaged_metrics_GBM.csv")


### WF3 (Workflow 3) ## Feature selection by RFE ### 

subsets <- c(1:5,20,30)

params_rfe <- rfeControl(functions = rfFuncs,method = "cv",number = 5,verbose = T)

set.seed(1234)

features_2 <- rfe(Species~.,data = train,
                  sizes=subsets,rfeControl=params_rfe)


## variation of accuracy with the removal of variables ### 

features_2

features_2$variables

predictors(features_2)

variables <- data.frame(features_2$variables)

### writing out this dataframe ### 

write.csv(variables,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Feature_selection/RFE_genus_importance.csv")


results <- data.frame(features_2$results)

### writing out this dataframe ### 

### writing out this dataframe ### 

write.csv(results,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Feature_selection/RFE_genus.csv")

predictors(features_2)

ggplot(features_2) 

plot(features_2, type = c("g", "o"))


######## 

train_rfe <- train[,c("Species","LCirc","LTD","WPFF","LA","WPFB")]

test_rfe <- test[,c("Species","LCirc","LTD","WPFF","LA","WPFB")]

#### MODELLING ##### 

## Decision TREES ### 

########### 

library(rpart)
library(rpart.plot)

set.seed(1234)

tree_rfe <- rpart(Species~., data = train_rfe)

### prune the tree ### 

printcp(tree_rfe)

plotcp(tree_rfe)

rpart.plot(tree_rfe)

### making the tree again with the optimal cp value 
set.seed(1234)
tree_rfe_pruned <- rpart(Species~., data = train_rfe,cp=0.01)

rpart.plot(tree_rfe_pruned)

## predicting with the unprunned tree ### 

### prediction and confusion matrix ###
##### 

p_tree_rfe <- predict(tree_rfe,test_rfe,type = "class")

c_tree_rfe <- confusionMatrix(p_tree_rfe,test_rfe$Species)

#### predicted vs reference ### 

pred_vs_ref_rpart <- data.frame(c_tree_rfe$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rpart,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Rpart/pred_vs_ref.csv")

################
###############

per_class_metrics_rpart <- data.frame(c_tree_rfe$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_rpart,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Rpart/per_class_metrics_rpart.csv")

#### Macro averaged metrics ### 

Macro_averaged_metrics_tree <- data.frame(apply(per_class_metrics_rpart[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_tree) ### getting the name of the column 

names(Macro_averaged_metrics_tree)[names(Macro_averaged_metrics_tree) == "apply.per_class_metrics_rpart..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_tree,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Rpart/macro_averaged_metric_tree.csv")


## predicting with the pruned tree 

p_tree_rfe_pruned <- predict(tree_rfe_pruned,test_rfe,type = "class")

c_tree_rfe_pruned <- confusionMatrix(p_tree_rfe_pruned,test_rfe$Species)

#### predicted vs reference ### PRUNED ########

pred_vs_ref_rpart_pruned <- data.frame(c_tree_rfe_pruned$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rpart_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Rpart/pred_vs_ref_pruned.csv")

################
###############    #### PRUNED ######## 

per_class_metrics_rpart_pruned <- data.frame(c_tree_rfe_pruned$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_rpart_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Rpart/per_class_metrics_rpart_pruned.csv")

################
############################
#### Macro averaged metrics ### PRUNED ########


Macro_averaged_metrics_tree_pruned <- data.frame(apply(per_class_metrics_rpart_pruned[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_tree_pruned) ### getting the name of the column 

names(Macro_averaged_metrics_tree_pruned)[names(Macro_averaged_metrics_tree_pruned) == "apply.per_class_metrics_rpart_pruned..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_tree_pruned,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Rpart/macro_averaged_metric_tree_pruned.csv")


##### Random forests##

set.seed(1234)
Rf_rfe <- randomForest(Species~., data = train_rfe)

Rf_rfe

plot(Rf_rfe)

p_rf_rfe <- predict(Rf_rfe,test_rfe)

c_rf_rfe <- confusionMatrix(p_rf_rfe,test_rfe$Species)

###############    #### Random Forest ######## 

#### predicted vs reference ### 

pred_vs_ref_rf_rfe <- data.frame(c_rf_rfe$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_rf_rfe,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Random_forest/pred_vs_ref.csv")

################

per_class_metrics_RF_rfe <- data.frame(c_rf_rfe$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_RF_rfe,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Random_forest/per_class_metrics_RF.csv")

#### Macro averaged metrics ### Random_forest ########

Macro_averaged_metrics_Rf <- data.frame(apply(per_class_metrics_RF_rfe[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_Rf) ### getting the name of the column 

names(Macro_averaged_metrics_Rf)[names(Macro_averaged_metrics_Rf) == "apply.per_class_metrics_RF_rfe..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_Rf,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/Random_forest/macro_averaged_metrics_RF.csv")



#### GBM ### 

grid <- expand.grid(n.trees=c(600,1000),
                    interaction.depth=c(4,6),
                    shrinkage=0.1,
                    n.minobsinnode=10)


params <- trainControl(method = "cv",
                       number = 5)



set.seed(1234)

gbm_rfe <- train(Species~., data=train_rfe,
                  method="gbm",trControl=params,
                  verbose=T,tuneGrid=grid)


plot(gbm_rfe)

gbm_rfe

p_gbm_rfe <- predict(gbm_rfe,test_rfe)

c_gbm_rfe <- confusionMatrix(p_gbm_rfe,test_rfe$Species)


###############    #### GBM ######## 

#### predicted vs reference ### GBM

pred_vs_ref_gbm_rfe <- data.frame(c_gbm_rfe$table)

### writing this dataframe out in a nice excel sheet ### 

write.csv(pred_vs_ref_gbm_rfe,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/GBM/pred_vs_ref.csv")

##############

per_class_metrics_GBM_rfe <- data.frame(c_gbm_rfe$byClass)

### writing this dataframe out in a nice excel sheet ### 

write.csv(per_class_metrics_GBM_rfe,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/GBM/per_class_metrics_GBM.csv")

#### Macro averaged metrics ### Random_forest ########

Macro_averaged_metrics_GBM <- data.frame(apply(per_class_metrics_GBM_rfe[-1],2,mean))

## renaming the column ### 

colnames(Macro_averaged_metrics_GBM) ### getting the name of the column 

names(Macro_averaged_metrics_GBM)[names(Macro_averaged_metrics_GBM) == "apply.per_class_metrics_GBM_rfe..1...2..mean."] <- "macro_averaged_metrics"

### Write it out in a nice excel sheet ### 

write.csv(Macro_averaged_metrics_GBM,"D:/Drive_C_2_18_21/PhD_WORK/Chapter_1/Genus/RFE/Modelling/GBM/macro_averaged_metrics_GBM.csv")


################# 3D PLOT BASED ON THE MOST DIVERGENT TRAITS ###### 


library(plotly)

plot <- plot_ly(train,x= ~LTD,y= ~LCirc,z= ~LA, color = ~Species
) %>%
  add_markers() %>%
  layout(
    scene = list(xaxis = list(title = 'LTD'),
                 yaxis = list(title = 'LCirc'),
                 zaxis = list(title = 'LA'))
  )


plot

library(htmlwidgets)

saveWidget(plot,"Genus3d.html", selfcontained = F, libdir = "lib")

